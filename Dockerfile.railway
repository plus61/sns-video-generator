# Railway Production Dockerfile - Fixed npm ci issue
FROM node:18-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    python3 \
    make \
    g++ \
    libcairo2-dev \
    libjpeg-dev \
    libpango1.0-dev \
    libgif-dev \
    libpixman-1-dev \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies with legacy peer deps to avoid conflicts
RUN npm install --legacy-peer-deps

# Copy all source files
COPY . .

# Set environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV SKIP_ENV_VALIDATION=1
ENV DISABLE_BULLMQ=true

# Create dummy .env file for build
RUN echo "NEXT_PUBLIC_SUPABASE_URL=https://dummy.supabase.co" > .env.production && \
    echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=dummy-key" >> .env.production

# Build the application with detailed logging
RUN echo "=== Starting build ===" && \
    npm run build && \
    echo "=== Build completed ===" && \
    echo "=== Directory contents ===" && \
    ls -la && \
    echo "=== .next contents ===" && \
    ls -la .next/ && \
    echo "=== BUILD_ID ===" && \
    cat .next/BUILD_ID && \
    echo "=== Checking standalone ===" && \
    ls -la .next/standalone/ || echo "No standalone directory"

# Keep production dependencies only
RUN npm prune --production

# Verify .next still exists after prune
RUN echo "=== After npm prune ===" && \
    ls -la .next/ || echo ".next missing after prune!"

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Fix permissions before switching user
RUN chown -R nextjs:nodejs /app && \
    chmod -R 755 /app/.next

# Create necessary directories
RUN mkdir -p /tmp/video-uploads /tmp/video-analysis && \
    chown -R nextjs:nodejs /tmp/video-uploads /tmp/video-analysis

# Switch to non-root user
USER nextjs

# Environment
ENV HOSTNAME="0.0.0.0"
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

# Debug startup
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'echo "=== Startup Debug ==="' >> /app/start.sh && \
    echo 'echo "Current directory: $(pwd)"' >> /app/start.sh && \
    echo 'echo "Directory contents:"' >> /app/start.sh && \
    echo 'ls -la' >> /app/start.sh && \
    echo 'echo ".next contents:"' >> /app/start.sh && \
    echo 'ls -la .next/ || echo ".next not found"' >> /app/start.sh && \
    echo 'echo "Starting Next.js..."' >> /app/start.sh && \
    echo 'npm start' >> /app/start.sh && \
    chmod +x /app/start.sh

# Use debug startup script
CMD ["/app/start.sh"]