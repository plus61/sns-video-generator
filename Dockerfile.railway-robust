# Railway Robust Dockerfile - Multi-stage build with proper .next handling
FROM node:18-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --legacy-peer-deps

# Rebuild stage for native deps
FROM node:18-alpine AS builder
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy deps from previous stage
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Set build environment
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Build the application
RUN npm run build && \
    echo "Build complete. Checking outputs:" && \
    ls -la && \
    if [ -d ".next" ]; then \
        echo ".next directory found with size:" && \
        du -sh .next; \
    else \
        echo "ERROR: .next directory not found after build!"; \
        exit 1; \
    fi

# Runner stage
FROM node:18-alpine AS runner
RUN apk add --no-cache libc6-compat
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy necessary files from builder
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

# Ensure .next exists and set proper permissions
RUN if [ ! -d ".next" ]; then \
        echo "ERROR: .next directory was not copied properly!"; \
        exit 1; \
    fi && \
    chown -R nextjs:nodejs /app

USER nextjs

EXPOSE 3000

ENV PORT 3000

# Start the application
CMD ["node_modules/.bin/next", "start"]